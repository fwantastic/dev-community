
CREATE TABLE [SCHEMA].USER (
	USER_ID				INT NOT NULL AUTO_INCREMENT,
	USER_NICKNAME		VARCHAR(255),
	PASSWORD			VARCHAR(255),
	USER_EMAIL			VARCHAR(255),
	EMAIL_SUBSCRIPTION	VARCHAR(1),
	ACTIVITY_POINT		INT,
	IS_ACTIVE			VARCHAR(1),
	CREATE_DTM			TIMESTAMP,
	UPDATE_DTM			TIMESTAMP,
	PRIMARY KEY (USER_ID)
);

CREATE TABLE [SCHEMA].ROLE (
	ROLE_ID				INT NOT NULL AUTO_INCREMENT,
	ROLE_NAME			VARCHAR(50),
	PRIMARY KEY (ROLE_ID)
);

CREATE TABLE [SCHEMA].USER_ROLE (
	USER_ID				INT NOT NULL,
	ROLE_ID				INT NOT NULL,
	PRIMARY KEY (USER_ID, ROLE_ID),
	FOREIGN KEY (USER_ID) REFERENCES USER(USER_ID),
	FOREIGN KEY (ROLE_ID) REFERENCES ROLE(ROLE_ID)
);

CREATE TABLE [SCHEMA].AUTHORITY (
	USER_ID				INT NOT NULL,
	AUTHORITY_NAME		VARCHAR(50),
	PRIMARY KEY (USER_ID, AUTHORITY_NAME),
	FOREIGN KEY (USER_ID) REFERENCES USER(USER_ID)
);

CREATE TABLE [SCHEMA].TAG (
	TAG_ID				INT NOT NULL AUTO_INCREMENT,
	TAG_NAME			VARCHAR(255),
	IS_ACTIVE			VARCHAR(1),
	CREATE_USER_ID		INT,
	UPDATE_USER_ID		INT,
	CREATE_DTM			TIMESTAMP,
	UPDATE_DTM			TIMESTAMP,
	PRIMARY KEY (TAG_ID),
	FOREIGN KEY (CREATE_USER_ID) REFERENCES USER(USER_ID),
	FOREIGN KEY (UPDATE_USER_ID) REFERENCES USER(USER_ID)
);

CREATE TABLE [SCHEMA].ARTICLE (
	ARTICLE_ID			INT NOT NULL AUTO_INCREMENT,
	TITLE				VARCHAR(255),
	VIEW_COUNT			INT,
	LIKE_COUNT			INT,
	CONTENTS			TEXT,
	IS_ACTIVE			VARCHAR(1),
	CREATE_USER_ID		INT,
	UPDATE_USER_ID		INT,
	CREATE_DTM			TIMESTAMP,
	UPDATE_DTM			TIMESTAMP,
	PRIMARY KEY (ARTICLE_ID),
	FOREIGN KEY (CREATE_USER_ID) REFERENCES USER(USER_ID),
	FOREIGN KEY (UPDATE_USER_ID) REFERENCES USER(USER_ID)
);

CREATE TABLE [SCHEMA].ARTICLE_TAG (
	ARTICLE_ID			INT NOT NULL,
	TAG_ID				INT NOT NULL,
	PRIMARY KEY (ARTICLE_ID, TAG_ID),
	FOREIGN KEY (ARTICLE_ID) REFERENCES ARTICLE(ARTICLE_ID),
	FOREIGN KEY (TAG_ID) REFERENCES TAG(TAG_ID)
);

CREATE TABLE [SCHEMA].FILE_UPLOAD (
	FILE_UPLOAD_ID	INT NOT NULL,
	ORIG_FILE_NAME	VARCHAR(200),
	SAVE_FILE_NAME	VARCHAR(200),
	FILE_PATH		VARCHAR(200),
	CONTENT_TYPE	VARCHAR(100),
	FILE_SIZE		INT,
	IS_ACTIVE		VARCHAR(1),
	CREATE_USER_ID	INT,
	UPDATE_USER_ID	INT,
	CREATE_DTM		TIMESTAMP,
	UPDATE_DTM		TIMESTAMP,
	PRIMARY KEY (ARTICLE_ID, TAG_ID),
	FOREIGN KEY (ARTICLE_ID) REFERENCES ARTICLE(ARTICLE_ID),
	FOREIGN KEY (TAG_ID) REFERENCES TAG(TAG_ID)
);